"
"
"
" jaguardeer's vimrc
"
"	-pathogen
"	-solarized
"	-ergonomic bindings
"
"

" When started as "evim", evim.vim will already have done these settings.
if v:progname =~? "evim"
  finish
endif

" Use Vim settings, rather than Vi settings (much better!).
" This must be first, because it changes other options as a side effect.
set nocompatible

" allow backspacing over everything in insert mode
set backspace=indent,eol,start

if has("vms")
  set nobackup		" do not keep a backup file, use versions instead
else
  set backup		" keep a backup file (restore to previous version)
  set undofile		" keep an undo file (undo changes after closing)
endif
set history=50		" keep 50 lines of command line history
set ruler		" show the cursor position all the time
set showcmd		" display incomplete commands
set incsearch		" do incremental searching

" For Win32 GUI: remove 't' flag from 'guioptions': no tearoff menu entries
" let &guioptions = substitute(&guioptions, "t", "", "g")

" CTRL-U in insert mode deletes a lot.  Use CTRL-G u to first break undo,
" so that you can undo CTRL-U after inserting a line break.
inoremap <C-U> <C-G>u<C-U>

" In many terminal emulators the mouse works just fine, thus enable it.
if has('mouse')
  set mouse=a
endif

"Set 256 colors
set t_Co=256

" Switch syntax highlighting on, when the terminal has colors
" Also switch on highlighting the last used search pattern.
if &t_Co > 2 || has("gui_running")
  syntax on
  set hlsearch
endif

" Only do this part when compiled with support for autocommands.
if has("autocmd")

  " Enable file type detection.
  " Use the default filetype settings, so that mail gets 'tw' set to 72,
  " 'cindent' is on in C files, etc.
  " Also load indent files, to automatically do language-dependent indenting.
  filetype plugin indent on

  " Put these in an autocmd group, so that we can delete them easily.
  augroup vimrcEx
  au!

  " For all text files set 'textwidth' to 78 characters.
  autocmd FileType text setlocal textwidth=78

  " When editing a file, always jump to the last known cursor position.
  " Don't do it when the position is invalid or when inside an event handler
  " (happens when dropping a file on gvim).
  " Also don't do it when the mark is in the first line, that is the default
  " position when opening a file.
  autocmd BufReadPost *
    \ if line("'\"") > 1 && line("'\"") <= line("$") |
    \   exe "normal! g`\"" |
    \ endif

  augroup END

else

  set autoindent		" always set autoindenting on

endif " has("autocmd")

" Convenient command to see the difference between the current buffer and the
" file it was loaded from, thus the changes you made.
" Only define it when not defined already.
if !exists(":DiffOrig")
  command DiffOrig vert new | set bt=nofile | r ++edit # | 0d_ | diffthis
		  \ | wincmd p | diffthis
endif

execute pathogen#infect()

" Set user directory to ~/.vim
set backupdir=$HOME/.vim/vimbak
set undodir=$HOME/.vim/vimbak
set viminfo+=n$HOME/.vim/viminfo

" tags search dir
set tags=./tags;

" Set line numbers and highlight
set nu
set cursorline

" set colorscheme to solarized
set background=dark
let g:solarized_termcolors=256
colorscheme solarized
" adjust colors a little bit
hi CursorLineNR ctermfg=Red
hi VertSplit ctermfg=black
hi MatchParen ctermbg=black ctermfg=grey
" highlight when lines get long
highlight ColorColumn ctermbg=black ctermfg=red
call matchadd('ColorColumn', '\%85v', 100)


" make some key mappings
let mapleader = " "
map <leader> <plug>(easymotion-prefix)
nnoremap <leader><leader>r :source ~/.vim/vimrc<CR>
nnoremap <leader><leader>n :set nohlsearch<CR>
nnoremap <leader><leader>h :set hls<CR>
nnoremap <leader><leader>j :set incsearch<CR>
nnoremap <leader><leader>m :set noincsearch<CR>
" ; is easier than :, switch , and ;
noremap ; :
noremap : ,
noremap , ;
nnoremap q; q:
" definition is last mark usually
nnoremap <C-]> 9<C-]>
" less shift toggling
noremap ' "
noremap " '
" noshift for +
noremap = +
noremap + =
" Q = qq (and can end macros too)
nnoremap Q qq<esc>
" ergonomix
map <C-c> <esc>
" yY doesnt yank newline
nnoremap yY ^y$
" make Y behave like D
nnoremap Y y$
" make K behave like J
nnoremap K kJ
" Make (){} more useful in coding
nnoremap ( ?\V(\\|)<CR>:noh<CR>
nnoremap ) /\V(\\|)<CR>:noh<CR>
nnoremap { ?\V{\\|}<CR>:noh<CR>
nnoremap } /\V{\\|}<CR>:noh<CR>
" reduce shift toggling for copypasta
nnoremap "* "8
nnoremap '* "8
nnoremap "8 "*
nnoremap '8 "*
" split keyboard macro keys
"noremap <a-Home> <esc>
"noremap <a-left> <c-t>
"noremap <a-right> 9<c-]>

" make <ESC> respond better
set timeoutlen=1000 ttimeoutlen=0

" set indent depth
set tabstop=6
set shiftwidth=6

" GLSL syntax highlighting
autocmd BufNewFile,BufRead *.glsl,*.geom,*.vert,*.frag,*.gsh,*.vsh,*.fsh,*.vs,*.fs set filetype=glsl
